{
  "name": "iframe2image",
  "description": "Convert an iframe to an image",
  "version": "0.1.1",
  "homepage": "https://github.com/twolfson/iframe2image",
  "author": {
    "name": "Todd Wolfson",
    "email": "todd@twolfson.com",
    "url": "http://twolfson.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/twolfson/iframe2image.git"
  },
  "bugs": {
    "url": "https://github.com/twolfson/iframe2image/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/twolfson/iframe2image/blob/master/LICENSE-MIT"
    }
  ],
  "main": "lib/iframe2image",
  "engines": {
    "node": "*"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt": "~0.3.12"
  },
  "keywords": [
    "iframe",
    "image",
    "convert"
  ],
  "readme": "# iframe2image [![Donate on Gittip](http://badgr.co/gittip/twolfson.png)](https://www.gittip.com/twolfson/)\n\nConvert an iframe to an image\n\n## Getting Started\n### On the server\nInstall the module with: `npm install iframe2image`. This is only practical with a tool like [browserify](https://github.com/substack/node-browserify).\n\n### In the browser\nDownload the [production version][min] or the [development version][max].\n\nYou will also need [domvas](https://github.com/pbakaus/domvas) on your site. iframe2image pre-packaged with domvas can be found in both [production version][minWithDomvas] and [development version[maxWithDomvas].\n\n[min]: https://raw.github.com/twolfson/iframe2image/master/dist/iframe2image.min.js\n[max]: https://raw.github.com/twolfson/iframe2image/master/dist/iframe2image.js\n[minWithDomvas]: https://raw.github.com/twolfson/iframe2image/master/dist/iframe2image.withdomvas.min.js\n[maxWithDomvas]: https://raw.github.com/twolfson/iframe2image/master/dist/iframe2image.withdomvas.js\n\nIn your web page:\n\n```html\n<script src=\"dist/iframe2image.min.js\"></script>\n<script>\niframe2image(myIframe, cb);\n</script>\n```\n\nIn your code, you can attach iframe2image's methods to any object.\n\n```html\n<script>\nthis.exports = MyGlobal.utils;\n</script>\n<script src=\"dist/iframe2image.min.js\"></script>\n<script>\nMyGlobal.utils.iframe2image(myIframe, cb);\n</script>\n```\n\n## Documentation\niframe2image is exposed via a single function\n```js\n/**\n * Convert an iframe to an image\n * @param {Object|HtmlElement} params If it is an object, properties will be looked up. If it is an iframe, it will be converted into an image.\n * @param {HTMLElement} params.iframe Iframe to convert over\n * @param {Function} cb Callback to execute once iframe is converted\n * @callback arguments[0] Error if any occurred\n * @callback arguments[1] Image element of rendered content\n */\n ```\n\n## Examples\nTaken from the `demo` folder:\n```js\n// Set up the canvas dimensions\nvar canvas = document.getElementById('canvas'),\n    context = canvas.getContext('2d');\ncanvas.width = 500;\ncanvas.height = 600;\n\n// Grab the iframe\nvar inner = document.getElementById('inner');\n\n// Get the image\niframe2image(inner, function (err, img) {\n  // If there is an error, log it\n  if (err) { return console.error(err); }\n\n  // Otherwise, add the image to the canvas\n  context.drawImage(img, 0, 0);\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt](https://github.com/gruntjs/grunt).\n\n_Also, please don't edit files in the \"dist\" subdirectory as they are generated via grunt. You'll find source code in the \"lib\" subdirectory!_\n\n## License\nCopyright (c) 2012 Todd Wolfson\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "iframe2image@0.1.1",
  "dist": {
    "shasum": "7607a5d8299f1676c6af35b4a9b008a905025b89"
  },
  "_from": "iframe2image@",
  "_resolved": "https://registry.npmjs.org/iframe2image/-/iframe2image-0.1.1.tgz"
}
